<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.mycompany.app</groupId>
  <artifactId>ShopCart</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>ShopCart</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- Change Java compilation level to 8 -->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    
    <!-- Dependencies versions -->
    <junit.version>4.13.1</junit.version>
    <assertj.swing.version>3.17.1</assertj.swing.version>
    <mockito.version>3.7.0</mockito.version>
    <mongo.driver.version>3.12.7</mongo.driver.version>
    <mongo.java.server.version>1.37.0</mongo.java.server.version>
    <testcontainers.version>1.16.0</testcontainers.version>
    <picocli.version>4.6.1</picocli.version>
    
     <!-- Plugins versions -->
    <build.helper.version>3.0.0</build.helper.version>
    <failsafe.version>2.22.2</failsafe.version>
    <docker.frabric8.version>0.34.1</docker.frabric8.version>
    
    <sonar.organization>lore1379</sonar.organization>
  	<sonar.host.url>https://sonarcloud.io</sonar.host.url>
  	
  	<sonar.issue.ignore.multicriteria>e11,e12</sonar.issue.ignore.multicriteria>
  	<!-- Disable rule for "Local variable and method parameter names should 
      comply with a naming convention" -->
    <sonar.issue.ignore.multicriteria.e11.ruleKey>
      java:S117
    </sonar.issue.ignore.multicriteria.e11.ruleKey>
    <sonar.issue.ignore.multicriteria.e11.resourceKey>
      **/ShopSwingView.java
    </sonar.issue.ignore.multicriteria.e11.resourceKey>
    <!-- Disable rule for "Tests should include assertions":
      SonarQube is not aware of AssertJ Swing -->
    <sonar.issue.ignore.multicriteria.e12.ruleKey>
      java:S2699
    </sonar.issue.ignore.multicriteria.e12.ruleKey>
    <sonar.issue.ignore.multicriteria.e12.resourceKey>
      **/ShopSwingViewTest.java
    </sonar.issue.ignore.multicriteria.e12.resourceKey>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
     <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-swing-junit</artifactId>
      <version>${assertj.swing.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongo-java-driver</artifactId>
      <version>${mongo.driver.version}</version>
    </dependency>
    <dependency>
      <!-- required to see Mongo Java Driver logs -->
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>
    <dependency>
      <groupId>de.bwaldvogel</groupId>
      <artifactId>mongo-java-server</artifactId>
      <version>${mongo.java.server.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>mongodb</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>${picocli.version}</version>
    </dependency>
  </dependencies>
  
  <build>
	<pluginManagement>
		<plugins>
			<plugin>
	          <artifactId>maven-surefire-report-plugin</artifactId>
	          <version>2.22.2</version>
	        </plugin>
	        <plugin>
	          <artifactId>maven-site-plugin</artifactId>
	          <version>3.9.1</version>
	        </plugin>
	        <plugin>
	          <groupId>org.jacoco</groupId>
	          <artifactId>jacoco-maven-plugin</artifactId>
	          <version>0.8.6</version>
	          <configuration>
              <excludes>
                <exclude>**/model/*.*</exclude>
                <exclude>**/ShopSwingApp.*</exclude>
              </excludes>
            </configuration>
	          <executions>
	            <execution>
	              <goals>
	                <!-- binds by default to the phase "initialize" -->
	                <goal>prepare-agent</goal>
	                <!-- binds by default to the phase "verify" -->
	                <goal>report</goal>
	              </goals>
	            </execution>
	          </executions>
	        </plugin>
	        <plugin>
	          <groupId>org.eluder.coveralls</groupId>
	          <artifactId>coveralls-maven-plugin</artifactId>
	          <version>4.3.0</version>
	          <dependencies>
	            <!-- This is required when using JDK 9 or higher
	              since javax.xml.bind has been removed from the JDK -->
	            <dependency>
	              <groupId>javax.xml.bind</groupId>
	              <artifactId>jaxb-api</artifactId>
	              <version>2.3.1</version>
	            </dependency>
	          </dependencies>
	        </plugin>
	        <plugin>
  			<groupId>org.pitest</groupId>
      		<artifactId>pitest-maven</artifactId>
      		<version>1.5.2</version>
      		<configuration>
      			<targetClasses>
      				<!--  excludes model, not to be tested -->
      				<param>com.mycompany.shopcart.controller.ShopController*</param>
      			</targetClasses>
      			<targetTests>
      				<param>com.mycompany.shopcart.controller.ShopControllerTest*</param>
      			</targetTests>
      			<mutators>
      				<mutator>DEFAULTS</mutator>
      				<mutator>NON_VOID_METHOD_CALLS</mutator>
      			</mutators>
      			<mutationThreshold>100</mutationThreshold>
      		</configuration>
  		</plugin>
	   </plugins>
	</pluginManagement>
	<plugins>
  		<plugin>
        	<groupId>org.codehaus.mojo</groupId>
        	<artifactId>build-helper-maven-plugin</artifactId>
        	<version>${build.helper.version}</version>
        	<executions>
          		<execution>
            		<id>add-test-source</id>
            		<phase>generate-test-sources</phase>
            		<goals>
              			<goal>add-test-source</goal>
            		</goals>
            		<configuration>
              			<sources>
                			<source>src/it/java</source>
              				<source>src/e2e/java</source>
              			</sources>
            		</configuration>
          		</execution>
        	</executions>
      	</plugin>
      	<plugin>
      		<groupId>org.apache.maven.plugins</groupId>
      		<artifactId>maven-failsafe-plugin</artifactId>
      		<version>${failsafe.version}</version>
      		<configuration>
      			<systemPropertyVariables>
      				<mongo.port>${mongo.mapped.port}</mongo.port>
      			</systemPropertyVariables>
      		</configuration>
      		<executions>
	        <execution>
	            <id>default-it</id>
	            <goals>
	              <goal>integration-test</goal>
	              <goal>verify</goal>
	            </goals>
	          </execution>
	          <execution>
	            <id>e2e-tests</id>
	            <goals>
	              <goal>integration-test</goal>
	              <goal>verify</goal>
	            </goals>
	            <configuration>
	              <excludes>
	                <exclude>**/*IT.java</exclude>
	              </excludes>
	              <includes>
	                <include>**/*E2E.java</include>
	              </includes>
	            </configuration>
	          </execution>
	      </executions>
		</plugin>
		<plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker.frabric8.version}</version>
        <configuration>
        	<images>
				<image>
              		<name>mongo:4.4.3</name>
              		<run>
                		<ports>
                  			<port>mongo.mapped.port:27017</port>
                		</ports>
              		</run>
            	</image>
			</images>
		</configuration>
        <executions>
			<execution>
				<id>docker:start</id>
				<phase>pre-integration-test</phase>
				<goals>
					<goal>start</goal>
				</goals>
			</execution>
			<execution>
				<id>docker:stop</id>
				<phase>post-integration-test</phase>
				<goals>
					<goal>stop</goal>
				</goals>
			</execution>
		</executions>
	</plugin>
	</plugins>
</build>
  
  <profiles>
    <profile>
      <id>jacoco</id>
      <build>
        <plugins>
          <plugin>
            <!-- configured in pluginManagement -->
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>coveralls</id>
      <build>
        <plugins>
          <plugin>
            <!-- configured in pluginManagement -->
            <!-- JaCoCo report is required by coveralls-maven-plugin -->
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <!-- configured in pluginManagement -->
            <groupId>org.eluder.coveralls</groupId>
            <artifactId>coveralls-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>verify</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>mutation-testing</id>
      <build>
        <plugins>
          <plugin>
            <!-- configured in pluginManagement -->
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>mutationCoverage</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
